
/*Ext的基本属性*/
var Ext = { apply: function (o, c, defaults) {}, emptyFn: function () {}, applyIf: function (o, c) {}, addBehaviors: function (o) {}, id: function (el, prefix) {}, extend: function (sb, sp, overrides) {}, override: function (origclass, overrides) {}, namespace: function (namespace1, namespace2, etc) {}, urlEncode: function (o) {}, urlDecode: function (string, overwrite) {}, each: function (array, fn, scope) {}, combine: function () {}, escapeRe: function (s) {}, callback: function (cb, scope, args, delay) {}, getDom: function (el) {}, getDoc: function () {}, getBody: function () {}, getCmp: function (id) {}, num: function (v, defaultValue) {}, destroy: function (arg1, arg2, etc) {}, removeNode: function (n) {}, type: function (o) {}, isEmpty: function (v, allowBlank) {}, value: function (v, defaultValue, allowBlank) {}, isArray: function (v) {}, isDate: function (v) {}, ns: function () {}, query: function (path, root, type) {}, onReady: function (fn, scope, options) {}, get: function (el) {}, fly: function (el, named) {}, select: function (selector, unique, root) {}, encode: function (o) {}, decode: function (json) {}, reg: function (xtype, cls) {}, log: function () {}, logf: function (format, arg1, arg2, etc) {}, dump: function (o) {}, time: function (name) {}, timeEnd: function (name, printResults) {}, data: { Connection: function (config) {}, SortTypes: { none: function (s) {}, asText: function (s) {}, asUCText: function (s) {}, asUCString: function (s) {}, asDate: function (s) {}, asFloat: function (s) {}, asInt: function (s) {} }, Record: function (data, id) {}, Store: function (config) {}, SimpleStore: function (config) {}, JsonStore: function (c) {}, Field: function (config) {}, DataReader: function (meta, recordType) {}, DataProxy: function () {}, MemoryProxy: function (data) {}, HttpProxy: function (conn) {}, ScriptTagProxy: function (config) {}, JsonReader: function (meta, recordType) {}, XmlReader: function (meta, recordType) {}, ArrayReader: function (meta, recordType) {}, Tree: function (root) {}, Node: function (attributes) {}, GroupingStore: function (config) {} }, XTemplate: function (parts) {}, Component: function (config) {}, Action: function (config) {}, Layer: function (config, existingEl) {}, Shadow: function (config) {}, BoxComponent: function (config) {}, SplitBar: function (dragElement, resizingElement, orientation, placement, existingProxy) {}, layout: { ContainerLayout: function (config) {}, FitLayout: function () {}, CardLayout: function () {}, AnchorLayout: function () {}, ColumnLayout: function () {}, BorderLayout: function () {}, FormLayout: function () {}, Accordion: function () {}, TableLayout: function () {}, AbsoluteLayout: function () {} }, Viewport: function (config) {}, Panel: function (config) {}, Window: function (config) {}, WindowGroup: function () {}, state: { Provider: function () {}, Manager: { setProvider: function (stateProvider) {}, get: function (key, defaultValue) {}, set: function (key, value) {}, clear: function (key) {}, getProvider: function () {} }, CookieProvider: function (config) {} }, DataView: function (config) {}, ColorPalette: function (config) {}, DatePicker: function (config) {}, TabPanel: function (config) {}, Button: function (config) {}, ButtonToggleMgr: { register: function (btn) {}, unregister: function (btn) {} }, SplitButton: function (config) {}, MenuButton: function () {}, CycleButton: function (config) {}, Toolbar: function (config) {}, PagingToolbar: function (config) {}, Resizable: function (el, config) {}, Editor: function (field, config) {}, Tip: function (config) {}, ToolTip: function (config) {}, QuickTip: function (config) {}, QuickTips: { init: function (autoRender) {}, enable: function () {}, disable: function () {}, isEnabled: function () {}, getQuickTip: function () {}, register: function (config) {}, unregister: function (el) {}, tips: function (config) {} }, tree: { TreePanel: function (config) {}, TreeEventModel: function (tree) {}, DefaultSelectionModel: function (config) {}, MultiSelectionModel: function (config) {}, TreeNode: function (attributes) {}, AsyncTreeNode: function (config) {}, TreeNodeUI: function (node) {}, RootTreeNodeUI: function () {}, TreeLoader: function (config) {}, TreeFilter: function (tree, config) {}, TreeSorter: function (tree, config) {}, TreeDropZone: function (tree, config) {}, TreeDragZone: function (tree, config) {}, TreeEditor: function (tree, fc, config) {} }, menu: { Menu: function (config) {}, MenuNav: function (menu) {}, MenuMgr: { hideAll: function () {}, register: function (menu) {}, get: function (menu) {}, unregister: function (menu) {}, registerCheckable: function (menuItem) {}, unregisterCheckable: function (menuItem) {}, getCheckedItem: function (groupId) {}, setCheckedItem: function (groupId, itemId) {} }, BaseItem: function (config) {}, TextItem: function (cfg) {}, Separator: function (config) {}, Item: function (config) {}, CheckItem: function (config) {}, Adapter: function (component, config) {}, DateItem: function (config) {}, ColorItem: function (config) {}, DateMenu: function (config) {}, ColorMenu: function (config) {} }, form: { Field: function (config) {}, MessageTargets: { qtip: { mark: function (f) {}, clear: function (f) {} }, title: { mark: function (f) {}, clear: function (f) {} }, under: { mark: function (f) {}, clear: function (f) {} }, side: { mark: function (f) {}, clear: function (f) {} }, around: { mark: function (f) {}, clear: function (f) {} } }, TextField: function (config) {}, TriggerField: function (config) {}, TwinTriggerField: function () {}, TextArea: function (config) {}, NumberField: function (config) {}, DateField: function (config) {}, ComboBox: function (config) {}, Checkbox: function (config) {}, CheckboxGroup: function (config) {}, Radio: function (config) {}, RadioGroup: function (config) {}, Hidden: function (config) {}, BasicForm: function (el, config) {}, FormPanel: function (config) {}, FieldSet: function (config) {}, HtmlEditor: function (config) {}, TimeField: function (config) {}, Label: function (config) {}, Action: function (form, options) {}, VTypes: { email: function (v) {}, url: function (v) {}, alpha: function (v) {}, alphanum: function (v) {} } }, BasicForm: function (el, config) {}, FormPanel: function (config) {}, grid: { GridPanel: function (config) {}, GridView: function (config) {}, GroupingView: function (config) {}, ColumnModel: function (config) {}, DefaultColumnModel: function (config) {}, CellSelectionModel: function (config) {}, EditorGridPanel: function (config) {}, GridEditor: function (field, config) {}, PropertyStore: function (grid, source) {}, PropertyColumnModel: function (grid, store) {}, PropertyGrid: function (config) {}, RowNumberer: function (config) {}, CheckboxSelectionModel: function (config) {} }, LoadMask: function (el, config) {}, ProgressBar: function () {}, Slider: function () {}, StatusBar: function (config) {}, History: { init: function (onReady, scope) {}, add: function (token, preventDup) {}, back: function () {}, forward: function () {}, getToken: function () {}, events: {} }, debug: { ScriptsPanel: function () {}, LogPanel: function () {}, DomTree: function () {}, HtmlNode: function (n) {} }, Ajax: { request: null, extraParams: null, url: null, defaultHeaders: null, method: null, serializeForm: function (form) {} }};

/*系统集合*/
var hSys={RunAfterLater:function(a){}};

/*基于Ext的扩展控件*/
Ext.ux = { GridPanel:function(a){},GridColumnIconTextCell:function(a,b,c){},Window:function(a){},TreePanel:function(a){},checkChildNode:function(a,b){},checkParentNode:function(a,b){}};